name: Push to ECR

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-deploy-develop:
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: go-api-template
      ECS_SERVICE: go-deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 581741715630.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t go-api-template .
          docker tag go-api-template:latest 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest
          docker push 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest

      - name: Update ECS Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json '{
            "family": "go-deploy",
            "containerDefinitions": [
              {
                "name": "go-api-td",
                "image": "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest",
                "memory": 512,
                "cpu": 256
              }
            ]
          }'

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment --desired-count 1

  build-deploy-stage:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECS_CLUSTER: go-api-template
      ECS_SERVICE: go-stage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 581741715630.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t go-api-template .
          docker tag go-api-template:latest 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest
          docker push 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest

      - name: Update ECS Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json '{
            "family": "go-stage",
            "containerDefinitions": [
              {
                "name": "go-api-td",
                "image": "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest",
                "memory": 512,
                "cpu": 256
              }
            ]
          }'

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment --desired-count 1
