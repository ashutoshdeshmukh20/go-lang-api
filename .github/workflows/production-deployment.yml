name: Production Deployment

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Tag for the Docker image'
        required: true
        default: 'latest'
      environment:
        required: true
        default: 'prod'

jobs:
  build-deploy-production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 581741715630.dkr.ecr.ap-south-1.amazonaws.com
        env:
          AWS_REGION: ap-south-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Pull Docker image from ECR
        run: docker pull 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:${{ github.event.inputs.image_tag }}

      - name: Update ECS Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json '{
            "family": "prod",
            "containerDefinitions": [
              {
                "name": "production-deployment",
                "image": "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-app:${{ github.event.inputs.image_tag }}",
                "memory": 512,
                "cpu": 256
              }
            ]
          }'
        env:
          AWS_REGION: ap-south-1

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster go-prod --service prod --force-new-deployment --desired-count 1
        env:
          AWS_REGION: ap-south-1
