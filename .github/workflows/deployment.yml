name: Push to ECR deployment ENV

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-deploy-develop:
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 581741715630.dkr.ecr.ap-south-1.amazonaws.com
        env:
          AWS_REGION: ap-south-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get latest version from ECR
        id: get_latest_version
        run: |
          latest_version=$(aws ecr describe-images --repository-name go-api-template --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags' --output text | grep -E '^v[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          if [ -z "$latest_version" ]; then
            latest_version="v1.0"
          fi
          echo "::set-output name=VERSION::$latest_version"

      - name: Increment version number
        id: increment_version
        run: |
          current_version=$VERSION
          version_numbers=($(echo "$current_version" | tr '.' ' '))
          major=${version_numbers[0]:1}
          minor=${version_numbers[1]}
          new_minor=$(( minor + 1 ))
          new_version="v$major.$new_minor"
          echo "::set-output name=NEW_VERSION::$new_version"

      - name: Build and push Docker image
        run: |
          VERSION="${{ steps.increment_version.outputs.NEW_VERSION }}"
          docker build -t go-api-template .
          docker tag go-api-template:latest "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:$VERSION"
          docker push "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:$VERSION"
        env:
          AWS_REGION: ap-south-1
          name: Push to ECR and Update ECS

      - name: Update ECS Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json '{
            "family": "go-develop-deployment",
            "containerDefinitions": [
              {
                "name": "go-develop-container",
                "image": "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest",
                "memory": 512,
                "cpu": 256
              }
            ]
          }'
        env:
          AWS_REGION: ap-south-1

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster go-develop-deployment --service develop --force-new-deployment --desired-count 1
        env:
          AWS_REGION: ap-south-1

  build-deploy-staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Login to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 581741715630.dkr.ecr.ap-south-1.amazonaws.com
        env:
          AWS_REGION: ap-south-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Generate timestamp for versioning
        id: timestamp
        run: echo "::set-output name=TIMESTAMP::$(date +%Y%m%d%H%M%S)"

      - name: Build and push Docker image
        run: |
          VERSION="v1.${{ steps.timestamp.outputs.TIMESTAMP }}"
          docker build -t go-api-template .
          docker tag go-api-template:latest 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:$VERSION
          docker push 581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:$VERSION
        env:
          AWS_REGION: ap-south-1
          name: Push to ECR and Update ECS

      - name: Update ECS Task Definition
        run: |
          aws ecs register-task-definition --cli-input-json '{
            "family": "go-staging-deployment",
            "containerDefinitions": [
              {
                "name": "go-staging-deployment",
                "image": "581741715630.dkr.ecr.ap-south-1.amazonaws.com/go-api-template:latest",
                "memory": 512,
                "cpu": 256
              }
            ]
          }'
        env:
          AWS_REGION: ap-south-1

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster go-staging-deployment --service staging --force-new-deployment --desired-count 1
        env:
          AWS_REGION: ap-south-1
